//use JsonSlurperClassic because it produces HashMap that could be serialized by pipeline
import groovy.json.JsonSlurperClassic
node() {

    def repoURL = env.repoURL
    def jiraKey= env.jiraKey


    stage("Prepare Workspace") {
        cleanWs()
        final String url = "http://localhost:8080/job/Demos/job/maven-pipeline-demo/job/sdkman/2/api/json"

        final String response = sh(script: "curl -s $url", returnStdout: true).trim()

        echo response
    }
    stage('JIRA Xray') {

        //echo "Generating Xray token..."
        def xray_server = "https://xray.cloud.xpand-it.com"
        def client_id = "A5656CE1738B4C3E96B9F0ABD61119E9"
        def client_secret = "aff8b0004fd03d3ef54cf17f5da3c3e20e81b25ffb3599554b1fae865fa03623"
        def token = bat(script: 'curl -X POST "https://xray.cloud.xpand-it.com/api/v1/authenticate" -H "Content-Type: application/json" --data-raw "{\"client_id\": \"A5656CE1738B4C3E96B9F0ABD61119E9\",\"client_secret\": \"aff8b0004fd03d3ef54cf17f5da3c3e20e81b25ffb3599554b1fae865fa03623\"}"', returnStdout: true)

        echo "JIRA XRAY"        
        //def data = '{/"testExecutionKey/":/"XRAY-23/",/"tests/":[{/"testKey/":/"XRAY-22/",/"comment/":/"Successful execution/",/"status/":/"PASS/"}]}'
        def data = '{"testExecutionKey":"XRAY-23","tests":[{"testKey":"XRAY-22","comment":"Successful execution","status":"PASS"}]}'
        writeJSON file: 'data.json', json: data

        def a = bat(script: "curl -H \"Content-Type: application/json\" -X POST -H \"Authorization: Bearer ${token}\"  --data @\"data.json\" ${xray_server}/api/v1/import/execution", returnStdout: true)
        echo "${a}"
        }
}

